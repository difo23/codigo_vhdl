$date
  Wed Dec  3 19:17:11 2014
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 16 ! a_in[15:0] $end
$var reg 16 " b_in[15:0] $end
$var reg 16 # salida_out[15:0] $end
$var reg 1 $ z_out $end
$var reg 2 % ual_in[1:0] $end
$var reg 16 & salida_xor_16[15:0] $end
$var reg 16 ' salida_sum_16[15:0] $end
$var reg 16 ( salida_mov[15:0] $end
$var reg 16 ) salida_dont_set[15:0] $end
$var reg 2 * ual[1:0] $end
$var reg 1 + z $end
$var reg 16 , salida[15:0] $end
$var reg 1 - cin $end
$var reg 1 . cout $end
$var reg 1 / overflow $end
$var reg 16 0 a[15:0] $end
$var reg 16 1 b[15:0] $end
$scope module u0 $end
$var reg 16 2 a[15:0] $end
$var reg 16 3 b[15:0] $end
$var reg 16 4 s[15:0] $end
$var reg 1 5 cout $end
$var reg 1 6 overflow $end
$var reg 1 7 cin $end
$var reg 17 8 c[16:0] $end
$upscope $end
$scope module u1 $end
$var reg 16 9 a[15:0] $end
$var reg 16 : b[15:0] $end
$var reg 16 ; salida[15:0] $end
$var reg 16 < a1[15:0] $end
$var reg 16 = b1[15:0] $end
$var reg 16 > c[15:0] $end
$upscope $end
$scope module u2 $end
$var reg 16 ? add[15:0] $end
$var reg 16 @ comp[15:0] $end
$var reg 16 A mov[15:0] $end
$var reg 16 B dont_set[15:0] $end
$var reg 2 C switch[1:0] $end
$var reg 16 D salida[15:0] $end
$var reg 1 E z $end
$var reg 16 F s[15:0] $end
$upscope $end
$enddefinitions $end
#0
b0000001100001111 !
b0000001011110000 "
b0000000111111111 #
0$
b01 %
b0000000111111111 &
b0000011000000000 '
b0000001011110000 (
b0000000011111111 )
b01 *
0+
b0000000111111111 ,
1-
0.
U/
b0000001100001111 0
b0000001011110000 1
b0000001100001111 2
b0000001011110000 3
b0000011000000000 4
05
U6
17
bUU000001111111111 8
b0000001011110000 9
b0000001100001111 :
b0000000111111111 ;
b0000001011110000 <
b0000001100001111 =
b0000000111111111 >
b0000011000000000 ?
b0000000111111111 @
b0000001011110000 A
b0000000011111111 B
b01 C
b0000000111111111 D
0E
b0000000111111111 F
#5000000
b0000011100001111 !
b0000010011110000 "
b0000101111111111 #
b00 %
b0000001111111111 &
b0000101111111111 '
b0000010011110000 (
b00 *
b0000101111111111 ,
0-
b0000011100001111 0
b0000010011110000 1
b0000011100001111 2
b0000010011110000 3
b0000101111111111 4
07
bUU000010000000000 8
b0000010011110000 9
b0000011100001111 :
b0000001111111111 ;
b0000010011110000 <
b0000011100001111 =
b0000001111111111 >
b0000101111111111 ?
b0000001111111111 @
b0000010011110000 A
b00 C
b0000101111111111 D
b0000101111111111 F
#10000000
b0000001011110000 "
b0000000011111111 #
b11 %
b0000010111111111 &
b0000101000000000 '
b0000001011110000 (
b11 *
b0000000011111111 ,
1-
b0000001011110000 1
b0000001011110000 3
b0000101000000000 4
17
bUU000011111111111 8
b0000001011110000 9
b0000010111111111 ;
b0000001011110000 <
b0000010111111111 >
b0000101000000000 ?
b0000010111111111 @
b0000001011110000 A
b11 C
b0000000011111111 D
b0000000011111111 F
#15000000
b0000100100001111 !
b0000001100001111 "
b0000001100001111 #
b10 %
b0000101000000000 &
b0000110000011110 '
b0000001100001111 (
b10 *
b0000001100001111 ,
0-
b0000100100001111 0
b0000001100001111 1
b0000100100001111 2
b0000001100001111 3
b0000110000011110 4
07
bUU000001100001111 8
b0000001100001111 9
b0000100100001111 :
b0000101000000000 ;
b0000001100001111 <
b0000100100001111 =
b0000101000000000 >
b0000110000011110 ?
b0000101000000000 @
b0000001100001111 A
b10 C
b0000001100001111 D
b0000001100001111 F
#20000000
b0000000011110000 !
b0000010011110000 "
b0000010000000000 #
b01 %
b0000010000000000 &
b0000010111100001 '
b0000010011110000 (
b01 *
b0000010000000000 ,
1-
b0000000011110000 0
b0000010011110000 1
b0000000011110000 2
b0000010011110000 3
b0000010111100001 4
17
bUU000000011110000 8
b0000010011110000 9
b0000000011110000 :
b0000010000000000 ;
b0000010011110000 <
b0000000011110000 =
b0000010000000000 >
b0000010111100001 ?
b0000010000000000 @
b0000010011110000 A
b01 C
b0000010000000000 D
b0000010000000000 F
#25000000
b0000010100001111 !
b0000011011110000 "
b0000101111111111 #
b00 %
b0000001111111111 &
b0000101111111111 '
b0000011011110000 (
b00 *
b0000101111111111 ,
0-
b0000010100001111 0
b0000011011110000 1
b0000010100001111 2
b0000011011110000 3
b0000101111111111 4
07
bUU000010000000000 8
b0000011011110000 9
b0000010100001111 :
b0000001111111111 ;
b0000011011110000 <
b0000010100001111 =
b0000001111111111 >
b0000101111111111 ?
b0000001111111111 @
b0000011011110000 A
b00 C
b0000101111111111 D
b0000101111111111 F
#30000000
b0000111100001111 !
b0000111100001111 "
b0000000000000000 #
1$
b01 %
b0000000000000000 &
b0001111000011111 '
b0000111100001111 (
b01 *
1+
b0000000000000000 ,
1-
b0000111100001111 0
b0000111100001111 1
b0000111100001111 2
b0000111100001111 3
b0001111000011111 4
17
bUU000111100001111 8
b0000111100001111 9
b0000111100001111 :
b0000000000000000 ;
b0000111100001111 <
b0000111100001111 =
b0000000000000000 >
b0001111000011111 ?
b0000000000000000 @
b0000111100001111 A
b01 C
b0000000000000000 D
1E
b0000000000000000 F
#35000000
b0000010100001111 !
b0000001100001111 "
b0000001100001111 #
0$
b10 %
b0000011000000000 &
b0000100000011110 '
b0000001100001111 (
b10 *
0+
b0000001100001111 ,
0-
b0000010100001111 0
b0000001100001111 1
b0000010100001111 2
b0000001100001111 3
b0000100000011110 4
07
bUU000011100001111 8
b0000001100001111 9
b0000010100001111 :
b0000011000000000 ;
b0000001100001111 <
b0000010100001111 =
b0000011000000000 >
b0000100000011110 ?
b0000011000000000 @
b0000001100001111 A
b10 C
b0000001100001111 D
0E
b0000001100001111 F
#40000000
b0000000011111111 #
b11 %
b0000100000011111 '
b11 *
b0000000011111111 ,
1-
b0000100000011111 4
17
b0000100000011111 ?
b11 C
b0000000011111111 D
b0000000011111111 F
